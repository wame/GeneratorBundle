{% extends '@WameSensioGenerator/base.html.twig' %}

{% block page_title_text %}Generate Entity{% endblock %}

{% form_theme form '@WameSensioGenerator/property_form_theme.html.twig' %}

{% block body %}
    {{ form_start(form) }}
        {{ form_widget(form) }}
        <div class="row">
            <div class="col-sm-10 col-sm-offset-2">
                <button type="submit" class="btn btn-primary">Submit</button>
            </div>
        </div>
    {{ form_end(form) }}
{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .entry-collection .form-control, .entry-collection .input-group-addon{
            font-size: 12px;
            line-height: 1;
            padding: 3px 5px;
            height: 25px;
        }
        .select2-container .select2-selection--single .select2-selection__rendered{

            height: 25px;
        }
        .select2-container .select2-selection--multiple{
            min-height: 25px;
        }
        .select2-results__option {
            padding: 2px;
            font-size: 12px;
        }
    </style>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="{{ asset('js/jquery.collection.js') }}"></script>

    <script>
        var entityNameSelector = '.entity-name-option';
        var entityTableSelector = '.entity-table-option';

        var typeSelector = '.property-type-option';
        var scaleSelector = '.property-scale-option';
        var precisionSelector = '.property-precision-option';
        var lengthSelector = '.property-length-option';
        var displaySelector = '.property-display-field-option';
        var targetEntitySelector = '.property-target-entity-option';
        var enumSelector = '.property-enum-option';
        var validationSelector = '.property-validation-option';

        (function($){
            $('.entry-collection').collection({
                allow_up: false,
                allow_down: false,
                add_at_the_end: true,
                add: '<a href="#" class="btn btn-default" title="Add element"><span class="glyphicon glyphicon-plus-sign"></span> Add property</a>',

                // here is the magic!
                elements_selector: 'tr.item',
                elements_parent_selector: '%id% tbody',

                after_add: function(collection, element) {
                    showLengthOptions(element, 255);
                    $('[data-role="select2"]').select2();
                }
            });
            $('form')
                .on('change', entityNameSelector, function(){
                    var word = this.value;
                    $.post("{{ path('generate_plural_tabalize') }}", {
                        'word': word
                    }, function(data) {
                        $(entityTableSelector).val(data);
                    });
                })
                .on('click', displaySelector, function(){
                    if (this.checked) {
                        $(displaySelector).not(this).removeProp('checked');
                    }
                })
                .on('change', typeSelector, function(){
                    $parentElement = $(this).closest('tr');
                    switch (this.value) {
                        case 'decimal':
                        case 'float':
                            showDecimalOptions($parentElement);
                            break;
                        case 'many2one':
                        case 'one2one':
                        case 'many2many':
                        case 'one2many':
                            showRelationOptions($parentElement);
                            break;
                        case 'string':
                            showLengthOptions($parentElement, 255);
                            break;
                        case 'integer':
                            showLengthOptions($parentElement, null);
                            break;
                        case 'smallint':
                            showLengthOptions($parentElement, null);
                            break;
                        case 'enum':
                            showEnumOptions($parentElement, null);
                            break;
                        default:
                            hideAllOptions($parentElement);

                    }
                });
        })(jQuery);


        $(typeSelector).trigger('change');

        function hideAllOptions(element) {
            $(element).find(lengthSelector+','+precisionSelector+','+scaleSelector+','+targetEntitySelector+','+enumSelector)
                .closest('.input-group').hide();
        }

        function showLengthOptions(element, defaultValue) {
            $(element).find(lengthSelector).val(defaultValue).closest('.input-group').show();
            $(element).find(precisionSelector+','+scaleSelector+','+targetEntitySelector+','+enumSelector)
                .val('')
                .closest('.input-group')
                .hide();
        }

        function showDecimalOptions(element) {
            $(element).find(lengthSelector+','+targetEntitySelector+','+enumSelector).closest('.input-group').hide();
            $(element).find(precisionSelector).val(11).closest('.input-group').show();
            $(element).find(scaleSelector).val(2).closest('.input-group').show()
        }

        function showRelationOptions(element) {
            $(element).find(targetEntitySelector).closest('.input-group').show();
            $(element).find(lengthSelector+','+precisionSelector+','+scaleSelector+','+enumSelector)
                .val('').closest('.input-group').hide()
        }

        function showEnumOptions(element) {
            $(element).find(enumSelector).closest('.input-group').show();
            $(element).find(lengthSelector+','+precisionSelector+','+scaleSelector+','+targetEntitySelector)
                .val('').closest('.input-group').hide();
        }
    </script>
{% endblock %}