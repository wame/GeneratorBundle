
    /**
{% block phpdoc_method_header %}{% endblock phpdoc_method_header %}
{% block phpdoc_method_annotations %}
{% if 'annotation' == format %}
     * @Route("/{{ '{' ~ identifier ~ '}' }}/edit", name="{{ route_name_prefix }}_edit")
     * @Method({"GET", "POST"})
{% endif %}
{% endblock phpdoc_method_annotations %}
     */
{% block method_definition %}
    public function editAction(Request $request, {{ entity_class }} ${{ entity_singularized }}): Response
{% endblock method_definition %}
    {
{% block method_body %}
    {%- if use_voter is defined and use_voter %}
        $this->denyAccessUnlessGranted({{ entity }}Voter::EDIT, ${{ entity_singularized }});
        {{- '\n\n' -}}
    {%- endif %}
        $deleteForm = $this->createDeleteForm(${{ entity_singularized }});
        $editForm = $this->createForm({{ entity_class }}Type::class, ${{ entity_singularized }});
        $editForm->handleRequest($request);

        if ($editForm->isSubmitted() && $editForm->isValid()) {
            $this->getDoctrine()->getManager()->flush();

            $this->addFlash('success', '{{ route_name_prefix }}.edit_success');

            return $this->redirectToRoute('{{ route_name_prefix }}_edit', ['{{ identifier }}' => ${{ entity_singularized }}->get{{ identifier|capitalize }}()]);
        }
{% endblock method_body %}

{% block method_return %}
        return $this->render('{{ entity|tabalize|replace({'\\': '/'}) }}/edit.html.twig', [
            '{{ entity_singularized }}' => ${{ entity_singularized }},
            'edit_form' => $editForm->createView(),
            'delete_form' => $deleteForm->createView(),
        ]);
{% endblock method_return %}
    }
